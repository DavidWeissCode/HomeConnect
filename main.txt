// @author David Weiss
// @github davidweisscode
// @date 13.08.2018

const CLIENT_ID = "TODO";
const CLIENT_SECRET = "TODO";
const REDIRECT_URI = "https://www.home-connect.com/global/";
const OAUTH_URL = "https://api.home-connect.com/security/oauth";
const API_URL = "https://api.home-connect.com/api/homeappliances";

const HAID_CM = "TODO";

const AUTH_CODE = "TODO";
const TOKEN = "TODO";

function requestAuth() {
	let AUTH_URL = OAUTH_URL + "/authorize" + "?" +
  	"client_id=" + CLIENT_ID + "&" + 
    "response_type=" + "code" + "&" +
    "redirect_uri=" + REDIRECT_URI + "&" + 
    "scope=" + "IdentifyAppliance%20Settings%20CoffeeMaker";
	fetch(AUTH_URL, {
  	method: "GET",
  	headers: {
    	"Content-Type": "application/json",
    }
	}).then(function(response) {
  	console.log(response.url);
    // window.open(response.url) only works when triggered by direct user interaction. Otherwise blocked.
    window.alert("Your response URL is:\n\n" + response.url);
	}, function(error) {
		console.log(error);
	})
}

function requestToken() {
	let TOKEN_URL = OAUTH_URL + "/token";
  let requestTokenData = {
  	'client_id': CLIENT_ID,
    'client_secret': CLIENT_SECRET,
    'redirect_uri': REDIRECT_URI,
    'grant_type': 'authorization_code',
    'code': AUTH_CODE
  };
  // Using FormData: https://developer.mozilla.org/en-US/docs/Web/API/FormData/Using_FormData_Objects
  var formBody = [];
  for (var property in requestTokenData) {
    var encodedKey = encodeURIComponent(property);
    var encodedValue = encodeURIComponent(requestTokenData[property]);
    formBody.push(encodedKey + "=" + encodedValue);
  }
	formBody = formBody.join("&");
	fetch(TOKEN_URL, {
  	method: "POST",
  	headers: {
    	"Content-Type": "application/x-www-form-urlencoded"
    },
    body: formBody
	}).then(function(response) {
    response.json().then(function(data) {
    	console.log(data);
      // id_token [mandatory]: same as access token
      // access_token [mandatory]: token to be used in subsequent Home Connect API requests
      // expires_in[mandatory]: expiration time of the access token and id_token in seconds, default: 86400
      // scope[mandatory]: permissions requested by the client application separated by space
      // refresh_token [mandatory]: refresh token (expires if it wasn't used within 2 months)
      // token_type [mandatory]: type of the token, currently always Bearer
    });
	}, function(error) {
		console.log(error);
	})
}

function getHaids() {
	fetch(API_URL, {
  	method: "GET",
  	headers: {
      "Accept": "application/vnd.bsh.sdk.v1+json",
      "Authorization": "Bearer " + TOKEN
    }
	}).then(function(response) {
    response.json().then(
    	data => console.log(data)
    );
	}, function(error) {
		console.log(error);
	})
}

function getCoffeemakerStatus() {
	fetch(API_URL + "/" + HAID_CM + "/settings", {
  	method: "GET",
  	headers: {
      "Accept": "application/vnd.bsh.sdk.v1+json",
      "Authorization": "Bearer " + TOKEN
    }
	}).then(function(response) {
    response.json().then(
    	data => console.log(data)
    );
	}, function(error) {
		console.log(error);
	})
}

function startCoffeemaker() {
	fetch(API_URL + "/" + HAID_CM + "/settings/BSH.Common.Setting.PowerState", {
  	method: "PUT",
  	headers: {
    	"Content-Type": "application/vnd.bsh.sdk.v1+json",
      //"Accept": "text/plain", // remove?
      "Authorization": "Bearer " + TOKEN
    },
    body: {
      "data": {
    		"key": "BSH.Common.Setting.PowerState",
    		"value": "BSH.Common.EnumType.PowerState.On"
  		}
    }
	}).then(function(response) {
    console.log("My response", response);
    response.json().then(function(data) {
    	console.log(data);
    });
	}, function(error) {
		console.log(error);
	})
}

function getEspresso() {
	let ESPRESSO_URL = API_URL + "/BOSCH-CTL636ES6-68A40E100876/programs/active";
	fetch(ESPRESSO_URL, {
  	method: "PUT",
  	headers: {
    	"Content-Type": "application/vnd.bsh.sdk.v1+json",
      "Accept": "application/vnd.bsh.sdk.v1+json", // text/plain // remove?
      "Authorization": "Bearer " + TOKEN
    },
    body: {

      "data":{
          "key":"ConsumerProducts.CoffeeMaker.Program.Beverage.Espresso",
          "options":[
              {
                  "key":"ConsumerProducts.CoffeeMaker.Option.BeanAmount",
                  "value":"ConsumerProducts.CoffeeMaker.EnumType.BeanAmount.Mild"
              },
              {
                  "key":"ConsumerProducts.CoffeeMaker.Option.FillQuantity",
                  "value":45,
                  "unit":"ml"
              }
          ]
      }
    }
	}).then(function(response) {
    console.log("My response", response);
    response.json().then(function(data) {
    	console.log(data);
    });
	}, function(error) {
		console.log(error);
	})
}
